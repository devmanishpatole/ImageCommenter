apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
        applicationId "com.devmanishpatole.imagecommenter"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            buildConfigField("String", "BASE_URL", "\"https://api.imgur.com/\"")
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BASE_URL", "\"https://api.imgur.com/\"")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$app_compat_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_version"

    // Networking
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // CardView
    implementation "androidx.cardview:cardview:$support_library_version"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    // Lifecycle Annotations
    implementation "androidx.appcompat:appcompat:$app_compat_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_version"
    implementation "androidx.legacy:legacy-support-v4:$legacy_support_version"

    // Dependency injection - Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Picasso
    implementation "com.squareup.picasso:picasso:$picasso_version"

    // Coroutine extensions
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$coroutine_extesnsion_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$coroutine_extesnsion_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$coroutine_extesnsion_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutine_version"

    implementation "androidx.recyclerview:recyclerview:$recycler_view_version"
    implementation "com.google.android.material:material:$material_version"

    // Firebase
    implementation "com.google.firebase:firebase-analytics-ktx:$analytics_version"
    implementation "com.google.firebase:firebase-crashlytics:$crashlytics_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"

    // Testing
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_version"
    androidTestImplementation "androidx.test.ext:junit:$junit_ext_version"
    testImplementation "android.arch.core:core-testing:$core_testing_version"
    androidTestImplementation "androidx.test:core-ktx:$test_core_ktx_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
}
